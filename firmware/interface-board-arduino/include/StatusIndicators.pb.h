/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_STATUSINDICATORS_PB_H_INCLUDED
#define PB_STATUSINDICATORS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _StatusIndicators {
    bool shearCut;
    bool shearHome;
    bool toolOut;
    bool toolIn;
    bool feedForward;
    bool feedReverse;
    bool headCw;
    bool headCcw;
    bool headOut;
    bool headIn;
    bool encoderFeedSet;
    bool encoderFeedReset;
    bool encoderBendSet;
    bool encoderBendRest;
    bool proximityHeadOut;
    bool proximityHeadIn;
    bool proximityShearHome;
    bool proximityShearCut;
    bool proximityToolIn;
    bool proximityToolOut;
    bool shearButton;
    bool proximityHeadLimit;
    bool proximityHeadCw;
    bool proximityHeadCcw;
    bool autoButton;
    bool eStop;
    bool fuse;
    int32_t encoderFeedCount;
    int32_t encoderBendCount;
    float twentyFourVrawBusVoltage;
    float twentyFourVrawBusCurrent;
    float auxTwentyFourVBusVoltage;
    float auxTwentyFourVBusCurrent;
    float twelveVBusVoltage;
    float twelveVBusCurrent;
    float fiveVBusVoltage;
    float fiveVBusCurrent;
    float threeVThreeVBusVoltage;
    float threeVThreeVBusCurrent;
    float fGndBusVoltage;
    float fGndBusCurrent;
} StatusIndicators;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define StatusIndicators_init_default            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define StatusIndicators_init_zero               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define StatusIndicators_shearCut_tag            1
#define StatusIndicators_shearHome_tag           2
#define StatusIndicators_toolOut_tag             3
#define StatusIndicators_toolIn_tag              4
#define StatusIndicators_feedForward_tag         5
#define StatusIndicators_feedReverse_tag         6
#define StatusIndicators_headCw_tag              7
#define StatusIndicators_headCcw_tag             8
#define StatusIndicators_headOut_tag             9
#define StatusIndicators_headIn_tag              10
#define StatusIndicators_encoderFeedSet_tag      11
#define StatusIndicators_encoderFeedReset_tag    12
#define StatusIndicators_encoderBendSet_tag      13
#define StatusIndicators_encoderBendRest_tag     14
#define StatusIndicators_proximityHeadOut_tag    15
#define StatusIndicators_proximityHeadIn_tag     16
#define StatusIndicators_proximityShearHome_tag  17
#define StatusIndicators_proximityShearCut_tag   18
#define StatusIndicators_proximityToolIn_tag     19
#define StatusIndicators_proximityToolOut_tag    20
#define StatusIndicators_shearButton_tag         21
#define StatusIndicators_proximityHeadLimit_tag  22
#define StatusIndicators_proximityHeadCw_tag     23
#define StatusIndicators_proximityHeadCcw_tag    24
#define StatusIndicators_autoButton_tag          25
#define StatusIndicators_eStop_tag               26
#define StatusIndicators_fuse_tag                27
#define StatusIndicators_encoderFeedCount_tag    28
#define StatusIndicators_encoderBendCount_tag    29
#define StatusIndicators_twentyFourVrawBusVoltage_tag 30
#define StatusIndicators_twentyFourVrawBusCurrent_tag 31
#define StatusIndicators_auxTwentyFourVBusVoltage_tag 32
#define StatusIndicators_auxTwentyFourVBusCurrent_tag 33
#define StatusIndicators_twelveVBusVoltage_tag   34
#define StatusIndicators_twelveVBusCurrent_tag   35
#define StatusIndicators_fiveVBusVoltage_tag     36
#define StatusIndicators_fiveVBusCurrent_tag     37
#define StatusIndicators_threeVThreeVBusVoltage_tag 38
#define StatusIndicators_threeVThreeVBusCurrent_tag 39
#define StatusIndicators_fGndBusVoltage_tag      40
#define StatusIndicators_fGndBusCurrent_tag      41

/* Struct field encoding specification for nanopb */
#define StatusIndicators_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     shearCut,          1) \
X(a, STATIC,   SINGULAR, BOOL,     shearHome,         2) \
X(a, STATIC,   SINGULAR, BOOL,     toolOut,           3) \
X(a, STATIC,   SINGULAR, BOOL,     toolIn,            4) \
X(a, STATIC,   SINGULAR, BOOL,     feedForward,       5) \
X(a, STATIC,   SINGULAR, BOOL,     feedReverse,       6) \
X(a, STATIC,   SINGULAR, BOOL,     headCw,            7) \
X(a, STATIC,   SINGULAR, BOOL,     headCcw,           8) \
X(a, STATIC,   SINGULAR, BOOL,     headOut,           9) \
X(a, STATIC,   SINGULAR, BOOL,     headIn,           10) \
X(a, STATIC,   SINGULAR, BOOL,     encoderFeedSet,   11) \
X(a, STATIC,   SINGULAR, BOOL,     encoderFeedReset,  12) \
X(a, STATIC,   SINGULAR, BOOL,     encoderBendSet,   13) \
X(a, STATIC,   SINGULAR, BOOL,     encoderBendRest,  14) \
X(a, STATIC,   SINGULAR, BOOL,     proximityHeadOut,  15) \
X(a, STATIC,   SINGULAR, BOOL,     proximityHeadIn,  16) \
X(a, STATIC,   SINGULAR, BOOL,     proximityShearHome,  17) \
X(a, STATIC,   SINGULAR, BOOL,     proximityShearCut,  18) \
X(a, STATIC,   SINGULAR, BOOL,     proximityToolIn,  19) \
X(a, STATIC,   SINGULAR, BOOL,     proximityToolOut,  20) \
X(a, STATIC,   SINGULAR, BOOL,     shearButton,      21) \
X(a, STATIC,   SINGULAR, BOOL,     proximityHeadLimit,  22) \
X(a, STATIC,   SINGULAR, BOOL,     proximityHeadCw,  23) \
X(a, STATIC,   SINGULAR, BOOL,     proximityHeadCcw,  24) \
X(a, STATIC,   SINGULAR, BOOL,     autoButton,       25) \
X(a, STATIC,   SINGULAR, BOOL,     eStop,            26) \
X(a, STATIC,   SINGULAR, BOOL,     fuse,             27) \
X(a, STATIC,   SINGULAR, INT32,    encoderFeedCount,  28) \
X(a, STATIC,   SINGULAR, INT32,    encoderBendCount,  29) \
X(a, STATIC,   SINGULAR, FLOAT,    twentyFourVrawBusVoltage,  30) \
X(a, STATIC,   SINGULAR, FLOAT,    twentyFourVrawBusCurrent,  31) \
X(a, STATIC,   SINGULAR, FLOAT,    auxTwentyFourVBusVoltage,  32) \
X(a, STATIC,   SINGULAR, FLOAT,    auxTwentyFourVBusCurrent,  33) \
X(a, STATIC,   SINGULAR, FLOAT,    twelveVBusVoltage,  34) \
X(a, STATIC,   SINGULAR, FLOAT,    twelveVBusCurrent,  35) \
X(a, STATIC,   SINGULAR, FLOAT,    fiveVBusVoltage,  36) \
X(a, STATIC,   SINGULAR, FLOAT,    fiveVBusCurrent,  37) \
X(a, STATIC,   SINGULAR, FLOAT,    threeVThreeVBusVoltage,  38) \
X(a, STATIC,   SINGULAR, FLOAT,    threeVThreeVBusCurrent,  39) \
X(a, STATIC,   SINGULAR, FLOAT,    fGndBusVoltage,   40) \
X(a, STATIC,   SINGULAR, FLOAT,    fGndBusCurrent,   41)
#define StatusIndicators_CALLBACK NULL
#define StatusIndicators_DEFAULT NULL

extern const pb_msgdesc_t StatusIndicators_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define StatusIndicators_fields &StatusIndicators_msg

/* Maximum encoded size of messages (where known) */
#define STATUSINDICATORS_PB_H_MAX_SIZE           StatusIndicators_size
#define StatusIndicators_size                    162

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
