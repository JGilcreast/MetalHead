; PlatformIO Project Configuration File for MiniCore
; https://github.com/MCUdude/MiniCore/
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed, and extra flags
;   Library options: dependencies, extra library storage
;   Advanced options: extra scripting
;
; Please visit the documentation for the other options
; https://github.com/MCUdude/MiniCore/blob/master/PlatformIO.md
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = Upload ; Default build target


; Common settings for all environments
[env]
platform = atmelavr
framework = arduino
lib_deps =  Wire
            robtillaart/PCF8575

; TARGET SETTINGS
; Chip in use
board = ATmega328
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L

; BUILD OPTIONS
; Comment out to enable LTO (this line unflags it)
build_unflags = -flto
; Extra build flags
build_flags =

; SERIAL MONITOR OPTIONS
; Serial monitor port defined in the Upload_UART environment
monitor_port = ${env:Upload.upload_port}
; Serial monitor baud rate
monitor_speed = 115200


; Run the following command to upload with this environment
; pio run -e Upload_UART -t upload
[env:Upload]
; Serial bootloader protocol
upload_protocol = urclock
; Serial upload port
; upload_port = /dev/cu.usbserial*
; Set upload baudrate. Can be changed on the fly if using Urboot
board_upload.speed = ${env:Set-Bootloader-Fuses.board_bootloader.speed}


; Run the following command to upload with this environment
; pio run -e Upload_ISP -t upload
[env:Upload-ISP]
; Custom upload procedure
upload_protocol = custom
; Avrdude upload flags
upload_flags =
    -C$PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf
    -p$BOARD_MCU
    -PUSB
    -cusbasp
; Avrdude upload command
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i


; Run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; Run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:Set-Bootloader-Fuses]
board_hardware.oscillator = external ; Oscillator type
board_bootloader.type = urboot       ; urboot, optiboot or no_bootloader
board_bootloader.speed = 115200      ; Bootloader baud rate
board_hardware.uart = uart0          ; Set UART to use for serial upload
board_hardware.bod = 2.7v            ; Set brown-out detection
board_hardware.eesave = yes          ; Preserve EEPROM when uploading using programmer
upload_protocol = usbasp             ; Use the USBasp as programmer
upload_flags =                       ; Select USB as upload port and divide the SPI clock by 8
    -PUSB
    -B8