/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_STATUS_INDICATORS_T_PB_H_INCLUDED
#define PB_STATUS_INDICATORS_T_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _status_indicators_t {
    bool shear_cut;
    bool shear_home;
    bool tool_out;
    bool tool_in;
    bool feed_forward;
    bool feed_reverse;
    bool head_cw;
    bool head_ccw;
    bool head_out;
    bool head_in;
    bool encoder_feed_set;
    bool encoder_feed_reset;
    bool encoder_bend_set;
    bool encoder_bend_reset;
    bool proximity_head_out;
    bool proximity_head_in;
    bool proximity_shear_home;
    bool proximity_shear_cut;
    bool proximity_tool_in;
    bool proximity_tool_out;
    bool shear_button;
    bool proximity_head_limit;
    bool proximity_head_cw;
    bool proximity_head_ccw;
    bool auto_button;
    bool e_stop;
    bool fuse;
    int32_t encoder_feed_count;
    int32_t encoder_bend_count;
    float twenty_four_vraw_bus_voltage;
    float twenty_four_vraw_bus_current;
    float aux_twenty_four_v_bus_voltage;
    float aux_twenty_four_v_bus_current;
    float twelve_v_bus_voltage;
    float twelve_v_bus_current;
    float five_v_bus_voltage;
    float five_v_bus_current;
    float three_v_three_v_bus_voltage;
    float three_v_three_v_bus_current;
    float f_gnd_bus_voltage;
    float f_gnd_bus_current;
} status_indicators_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define status_indicators_t_init_default         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define status_indicators_t_init_zero            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define status_indicators_t_shear_cut_tag        1
#define status_indicators_t_shear_home_tag       2
#define status_indicators_t_tool_out_tag         3
#define status_indicators_t_tool_in_tag          4
#define status_indicators_t_feed_forward_tag     5
#define status_indicators_t_feed_reverse_tag     6
#define status_indicators_t_head_cw_tag          7
#define status_indicators_t_head_ccw_tag         8
#define status_indicators_t_head_out_tag         9
#define status_indicators_t_head_in_tag          10
#define status_indicators_t_encoder_feed_set_tag 11
#define status_indicators_t_encoder_feed_reset_tag 12
#define status_indicators_t_encoder_bend_set_tag 13
#define status_indicators_t_encoder_bend_reset_tag 14
#define status_indicators_t_proximity_head_out_tag 15
#define status_indicators_t_proximity_head_in_tag 16
#define status_indicators_t_proximity_shear_home_tag 17
#define status_indicators_t_proximity_shear_cut_tag 18
#define status_indicators_t_proximity_tool_in_tag 19
#define status_indicators_t_proximity_tool_out_tag 20
#define status_indicators_t_shear_button_tag     21
#define status_indicators_t_proximity_head_limit_tag 22
#define status_indicators_t_proximity_head_cw_tag 23
#define status_indicators_t_proximity_head_ccw_tag 24
#define status_indicators_t_auto_button_tag      25
#define status_indicators_t_e_stop_tag           26
#define status_indicators_t_fuse_tag             27
#define status_indicators_t_encoder_feed_count_tag 28
#define status_indicators_t_encoder_bend_count_tag 29
#define status_indicators_t_twenty_four_vraw_bus_voltage_tag 30
#define status_indicators_t_twenty_four_vraw_bus_current_tag 31
#define status_indicators_t_aux_twenty_four_v_bus_voltage_tag 32
#define status_indicators_t_aux_twenty_four_v_bus_current_tag 33
#define status_indicators_t_twelve_v_bus_voltage_tag 34
#define status_indicators_t_twelve_v_bus_current_tag 35
#define status_indicators_t_five_v_bus_voltage_tag 36
#define status_indicators_t_five_v_bus_current_tag 37
#define status_indicators_t_three_v_three_v_bus_voltage_tag 38
#define status_indicators_t_three_v_three_v_bus_current_tag 39
#define status_indicators_t_f_gnd_bus_voltage_tag 40
#define status_indicators_t_f_gnd_bus_current_tag 41

/* Struct field encoding specification for nanopb */
#define status_indicators_t_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     shear_cut,         1) \
X(a, STATIC,   SINGULAR, BOOL,     shear_home,        2) \
X(a, STATIC,   SINGULAR, BOOL,     tool_out,          3) \
X(a, STATIC,   SINGULAR, BOOL,     tool_in,           4) \
X(a, STATIC,   SINGULAR, BOOL,     feed_forward,      5) \
X(a, STATIC,   SINGULAR, BOOL,     feed_reverse,      6) \
X(a, STATIC,   SINGULAR, BOOL,     head_cw,           7) \
X(a, STATIC,   SINGULAR, BOOL,     head_ccw,          8) \
X(a, STATIC,   SINGULAR, BOOL,     head_out,          9) \
X(a, STATIC,   SINGULAR, BOOL,     head_in,          10) \
X(a, STATIC,   SINGULAR, BOOL,     encoder_feed_set,  11) \
X(a, STATIC,   SINGULAR, BOOL,     encoder_feed_reset,  12) \
X(a, STATIC,   SINGULAR, BOOL,     encoder_bend_set,  13) \
X(a, STATIC,   SINGULAR, BOOL,     encoder_bend_reset,  14) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_head_out,  15) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_head_in,  16) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_shear_home,  17) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_shear_cut,  18) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_tool_in,  19) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_tool_out,  20) \
X(a, STATIC,   SINGULAR, BOOL,     shear_button,     21) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_head_limit,  22) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_head_cw,  23) \
X(a, STATIC,   SINGULAR, BOOL,     proximity_head_ccw,  24) \
X(a, STATIC,   SINGULAR, BOOL,     auto_button,      25) \
X(a, STATIC,   SINGULAR, BOOL,     e_stop,           26) \
X(a, STATIC,   SINGULAR, BOOL,     fuse,             27) \
X(a, STATIC,   SINGULAR, INT32,    encoder_feed_count,  28) \
X(a, STATIC,   SINGULAR, INT32,    encoder_bend_count,  29) \
X(a, STATIC,   SINGULAR, FLOAT,    twenty_four_vraw_bus_voltage,  30) \
X(a, STATIC,   SINGULAR, FLOAT,    twenty_four_vraw_bus_current,  31) \
X(a, STATIC,   SINGULAR, FLOAT,    aux_twenty_four_v_bus_voltage,  32) \
X(a, STATIC,   SINGULAR, FLOAT,    aux_twenty_four_v_bus_current,  33) \
X(a, STATIC,   SINGULAR, FLOAT,    twelve_v_bus_voltage,  34) \
X(a, STATIC,   SINGULAR, FLOAT,    twelve_v_bus_current,  35) \
X(a, STATIC,   SINGULAR, FLOAT,    five_v_bus_voltage,  36) \
X(a, STATIC,   SINGULAR, FLOAT,    five_v_bus_current,  37) \
X(a, STATIC,   SINGULAR, FLOAT,    three_v_three_v_bus_voltage,  38) \
X(a, STATIC,   SINGULAR, FLOAT,    three_v_three_v_bus_current,  39) \
X(a, STATIC,   SINGULAR, FLOAT,    f_gnd_bus_voltage,  40) \
X(a, STATIC,   SINGULAR, FLOAT,    f_gnd_bus_current,  41)
#define status_indicators_t_CALLBACK NULL
#define status_indicators_t_DEFAULT NULL

extern const pb_msgdesc_t status_indicators_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define status_indicators_t_fields &status_indicators_t_msg

/* Maximum encoded size of messages (where known) */
#define STATUS_INDICATORS_T_PB_H_MAX_SIZE        status_indicators_t_size
#define status_indicators_t_size                 162

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
